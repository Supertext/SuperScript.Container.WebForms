<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="superScript.JavaScript" type="SuperScript.JavaScript.Configuration.JavaScriptConfig, SuperScript.JavaScript" />
    <section name="superScript.ExternalFile" type="SuperScript.ExternalFile.Configuration.ExternalFileConfig, SuperScript.ExternalFile" />
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
    </sectionGroup>
    <section name="superScript" type="SuperScript.Configuration.SuperScriptConfig, SuperScript.Common" />
  </configSections>
  <connectionStrings>
    <add name="DefaultConnection" providerName="System.Data.SqlClient" connectionString="Data Source=(LocalDb)\v11.0;Initial Catalog=aspnet-SuperScript Test-20130505093121;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|\aspnet-SuperScript Test-20130505093121.mdf" />
    <add name="Supertext" connectionString="Server=127.0.0.1; Protocol=TCP; Port=3306; user id=supertext; password=root; database=supertext; default command timeout=500; connection timeout=500; Allow User Variables=True;" providerName="MySql.Data.MySqlClient" />
    <add name="SqlLocalTest" providerName="System.Data.SqlClient" connectionString="Data Source=ANDREWS_RMBP\SQLEXPRESS;Initial Catalog=LocalTest;Persist Security Info=True;User ID=sa;password=d0cum3nt" />
  </connectionStrings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
    <pages>
      <namespaces>
        <add namespace="System.Web.Optimization" />
      </namespaces>
      <controls>
        <add assembly="Microsoft.AspNet.Web.Optimization.WebForms" namespace="Microsoft.AspNet.Web.Optimization.WebForms" tagPrefix="webopt" />
      </controls>
    </pages>
    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login" timeout="2880" defaultUrl="~/" />
    </authentication>
    <!--
            If you are deploying to a cloud environment that has multiple web server instances,
            you should change session state mode from "InProc" to "Custom". In addition,
            change the connection string named "DefaultConnection" to connect to an instance
            of SQL Server (including SQL Azure and SQL  Compact) instead of to SQL Server Express.
      -->
    <!--<httpHandlers>
      <add verb="GET" path="*/files/*" type="SuperScript.Handlers.Files, SuperScript.ExternalFile" />
    </httpHandlers>-->
    <!--<httpModules>
      <add type="SuperScript.HttpInitialiser, SuperScript" name="HttpInitialiser"/>
    </httpModules>-->
    <profile defaultProvider="DefaultProfileProvider">
      <providers>
        <add name="DefaultProfileProvider" type="System.Web.Providers.DefaultProfileProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" applicationName="/" />
      </providers>
    </profile>
    <membership defaultProvider="DefaultMembershipProvider">
      <providers>
        <add name="DefaultMembershipProvider" type="System.Web.Providers.DefaultMembershipProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
      </providers>
    </membership>
    <roleManager defaultProvider="DefaultRoleProvider">
      <providers>
        <add name="DefaultRoleProvider" type="System.Web.Providers.DefaultRoleProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" applicationName="/" />
      </providers>
    </roleManager>
    <!--
            If you are deploying to a cloud environment that has multiple web server instances,
            you should change session state mode from "InProc" to "Custom". In addition,
            change the connection string named "DefaultConnection" to connect to an instance
            of SQL Server (including SQL Azure and SQL  Compact) instead of to SQL Server Express.
      -->
    <sessionState mode="InProc" customProvider="DefaultSessionProvider">
      <providers>
        <add name="DefaultSessionProvider" type="System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" />
      </providers>
    </sessionState>
    <!--<httpModules>
			<add name="HttpInitialiser" type="SuperScript.HttpInitialiser, SuperScript.Common" />
		</httpModules>-->
    <!--<httpModules>
			<add name="HttpInitialiser" type="SuperScript.HttpInitialiser, SuperScript.Common" />
		</httpModules>-->
  </system.web>
  <system.webServer>
    <modules>
      <add name="CommonHandler" type="SuperScript.HttpInitialiser, SuperScript.Common" />
      <add name="JavaScriptHandler" type="SuperScript.JavaScript.HttpInitialiser, SuperScript.JavaScript" />
    </modules>
    <handlers>
      <add name="DeleteHandler" verb="GET" path="delete" type="SuperScript.ExternalFile.Handlers.Delete" />
      <add name="EmptyHandler" verb="GET" path="empty" type="SuperScript.ExternalFile.Handlers.Empty" />
      <add name="GetHandler" verb="GET" path="files" type="SuperScript.ExternalFile.Handlers.Get" />
      <add name="InitHandler" verb="GET" path="init" type="SuperScript.ExternalFile.Handlers.Init" />
      <add name="ListHandler" verb="GET" path="list" type="SuperScript.ExternalFile.Handlers.List" />
      <add name="ReInitHandler" verb="GET" path="reinit" type="SuperScript.ExternalFile.Handlers.ReInit" />
      <add name="RemoveHandler" verb="GET" path="remove" type="SuperScript.ExternalFile.Handlers.Remove" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Extensions" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.20.0" newVersion="2.2.20.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Primitives" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.2.20.0" newVersion="4.2.20.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.2.0" newVersion="5.2.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
         to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
     -->
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <dotNetOpenAuth>
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid>
      <relyingParty>
        <security requireSsl="false">
          <!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
          <!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
            <add endpoint="https://www.google.com/accounts/o8/ud" />
          </trustedProviders>-->
        </security>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
               with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
        </behaviors>
      </relyingParty>
    </openid>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
  </dotNetOpenAuth>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
         which is necessary for OpenID urls with unicode characters in the domain/host name.
         It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
  <system.net>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
           before trusting HTTPS certificates.  But this setting tends to not 
           be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <!--<system.webServer>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="HttpInitialiser" type="SuperScript.HttpInitialiser, SuperScript.Common" />
    </modules>
  </system.webServer>-->
  <!--<system.webServer>
		<modules runAllManagedModulesForAllRequests="true">
			<add name="HttpInitialiser" type="SuperScript.HttpInitialiser, SuperScript.Common" />
		</modules>
	</system.webServer>-->
  <superScript>
    <emitters>
      <emitter key="javascript" isDefault="true">
        <converters>
          <modifier type="SuperScript.JavaScript.Modifiers.Converters.JavaScriptStringify, SuperScript.JavaScript" />
        </converters>
        <postModifiers>
          <modifier emitMode="LiveOnly" useWhenBundled="false" type="SuperScript.JavaScript.Modifiers.Post.JavaScriptMinifier, SuperScript.JavaScript" />
        </postModifiers>
        <writers>
          <modifier type="SuperScript.ExternalFile.Modifiers.Writers.ExternalScriptWriter, SuperScript.ExternalFile" />
        </writers>
      </emitter>
      <emitter key="templates">
        <converters>
          <modifier type="SuperScript.Templates.jQueryTmpl.Modifiers.Converters.JQueryTmplStringify, SuperScript.Templates.jQueryTmpl">
            <properties>
              <property name="PreCompile" value="true" type="System.Boolean, mscorlib" />
            </properties>
          </modifier>
        </converters>
        <postModifiers>
          <modifier type="SuperScript.Templates.Modifiers.Post.ScriptIncluder, SuperScript.Templates" />
        </postModifiers>
        <writers>
          <modifier type="SuperScript.ExternalFile.Modifiers.Writers.ExternalScriptWriter, SuperScript.ExternalFile" />
        </writers>
      </emitter>
      <!--<emitter key="JsRenderTemplates">
        <converters>
          <modifier type="SuperScript.Templates.JsRender.Modifiers.Converters.JsRenderStringify, SuperScript.Templates.JsRender">
            <properties>
              <property name="jQueryPresent" value="true" type="System.Boolean, mscorlib" />
              <property name="PreCompile" value="true" type="System.Boolean, mscorlib" />
              <property name="ScriptPath" value="~/Scripts/jsrender.js" />
            </properties>
          </modifier>
        </converters>
        <postModifiers>
          <modifier type="SuperScript.Templates.Modifiers.Post.ScriptIncluder, SuperScript.Templates" />
        </postModifiers>
        <writers>
          <modifier type="SuperScript.ExternalFile.Modifiers.Writers.ExternalScriptWriter, SuperScript.ExternalFile" />
        </writers>
      </emitter>-->
      <!-- Instances of IEmitter may be declared here.
         See http://supertext.github.io/SuperScript/emitters/create-emitter.html for more information. -->
      <!-- Instances of IEmitter may be declared here.
				 See http://supertext.github.io/SuperScript/emitters/create-emitter.html for more information. -->
    </emitters>
    <emitterBundles>
      <emitterBundle key="bundled" bundleKeys="javascript, whenReady, templates">
        <postModifiers>
          <modifier emitMode="LiveOnly" type="SuperScript.JavaScript.Modifiers.Post.JavaScriptMinifier, SuperScript.JavaScript" />
        </postModifiers>
        <writers>
          <modifier type="SuperScript.ExternalFile.Modifiers.Writers.ExternalScriptWriter, SuperScript.ExternalFile">
            <properties>
              <property name="Longevity" value="Reuse" type="SuperScript.Longevity, SuperScript.ExternalFile" />
            </properties>
          </modifier>
        </writers>
      </emitterBundle>
      <!-- Instances of EmitterBundle may be declared here.
         See http://supertext.github.io/SuperScript/emitters/emitter-bundles.html for more information. -->
      <!-- Instances of EmitterBundle may be declared here.
				 See http://supertext.github.io/SuperScript/emitters/emitter-bundles.html for more information. -->
    </emitterBundles>
  </superScript>
  <superScript.JavaScript>
    <declarations>
      <arrays>
        <array name="testArray" comment="testArray's comment" elements="2014, 2015, 2016" emitterKey="javascript" type="System.Int32, mscorlib" />
        <!--<arrayElements>
            <element value="2000" />
            <element value="2001" />
            <element value="2002" />
            <element value="2002" />
          </arrayElements>-->
      </arrays>
      <calls>
        <call functionName="test" comment="A commented function call" emitterKey="javascript">
          <parameters>
            <parameter value="Andrew" />
            <parameter value="100" type="System.Int64, mscorlib" />
          </parameters>
        </call>
      </calls>
      <comment text="This is a test comment." emitterKey="javascript" />
      <enums>
        <enum comment="A configured enum" emitterKey="javascript" name="enumDays" type="System.DayOfWeek, mscorlib" />
      </enums>
      <variables>
        <variable name="username" value="Andrew" comment="A commented variable" emitterKey="javascript" />
        <variable name="another" value="1" type="System.Int32, mscorlib" emitterKey="javascript" />
      </variables>
    </declarations>
  </superScript.JavaScript>
  <superScript.ExternalFile>
    <storage type="SuperScript.ExternalFile.Storage.DbStore, SuperScript.ExternalFile">
      <dbProvider connectionStringName="SqlLocalTest" type="SuperScript.ExternalFile.SqlServer.SqlServerStoreProvider, SuperScript.ExternalFile.SqlServer" />
    </storage>
  </superScript.ExternalFile>
</configuration>